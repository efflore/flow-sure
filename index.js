var q=(x)=>typeof x==="function";var Y=(x)=>(B)=>B instanceof x,D=(x)=>Y(Error)(x),K=function(){return this};var Z=(x)=>x==null?S():m(x)?x:$(x),m=(x)=>Q(x)||L(x);class V{static instance=new V;get=()=>{return}}var G=V.prototype;G.map=G.chain=G.filter=G.guard=G.catch=K;G.or=(x)=>Z(x());G.match=function(x){return q(x.Nil)?x.Nil():this};var S=()=>V.instance,L=(x)=>x===V.instance;class W{x;constructor(x){this.value=x}get(){return this.value}}var H=W.prototype;H.map=function(x){return new W(x(this.value))};H.chain=function(x){return x(this.value)};H.filter=H.guard=function(x){return x(this.value)?this:S()};H.or=H.catch=K;H.match=function(x){return q(x.Ok)?x.Ok(this.value):this};var $=(x)=>new W(x),Q=Y(W);class j{x;constructor(x){this.error=x}get(){throw this.error}}var J=j.prototype;J.map=J.chain=K;J.filter=J.guard=()=>S();J.or=(x)=>Z(x());J.catch=function(x){return x(this.error)};J.match=function(x){return q(x.Err)?x.Err(this.error):this};var X=(x)=>new j(D(x)?x:new Error(String(x))),A=Y(j);var I=(x,...B)=>{try{return M(x(...B))}catch(z){return X(z)}},C=async(x,...B)=>{try{return M(await x(...B))}catch(z){return X(z)}},U=async(...x)=>{let B=q(x[0])?S():M(x.shift());for(let z of x){if(A(B))break;if(!q(z))return X(new TypeError("Expected a function in flow"));B=/^async\s+/.test(z.toString())?await C(async()=>z(B.get())):I(z,B.get())}return B},T=(x)=>Q(x)||L(x)||A(x),M=(x)=>x==null?S():T(x)?x:D(x)?X(x):$(x),g=(x)=>A(x)?x.error:Q(x)||L(x)?x.get():x;export{M as toResult,I as result,$ as ok,S as nil,Z as maybe,T as isResult,Q as isOk,L as isNil,m as isMaybe,A as isErr,g as fromResult,U as flow,X as err,C as asyncResult,W as Ok,V as Nil,j as Err};
